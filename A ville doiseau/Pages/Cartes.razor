@inherits LayoutComponentBase
@page "/"
@inject IJSRuntime JS
@using System.Globalization;
@using GeoCoordinatePortable;

<PageTitle>Villes</PageTitle>

@using A_ville_doiseau.Villes
@inject VilleService VilleService

<h1 class="noprint">Les différentes villes</h1>

@if (villes == null || villeDepart == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <select class="noprint" @onchange="@ChangerVilleDepart">
        @foreach (var ville in villes)
        {
            <option value="@ville.Nom">@ville.Nom</option>
        }
    </select>

    <div class="cartes">
        @foreach (var ville in villes)
        {
            <div class="carte recto">
                <div class="image-fond">
                    <a href="@ville.LienWikipedia">
                        <img src="@ville.Image" />
                    </a>
                </div>
                <div class="libelle fond-blanc">
                    <h2 class="nom">@ville.Nom</h2>
                </div>
            </div>
            <div class="carte verso">
                <div class="image-fond">
                    <a href="@ville.LienWikipedia">
                        <img src="@ville.Image" />
                    </a>
                </div>
                <div class="libelle fond-blanc">
                    <h2 class="distance">
                        @string.Format("{0:#,##0} km", ville.Coordonnees.GetDistanceTo(villeDepart.Coordonnees) / 1000)
                    </h2>
                    <h4 class="nom">@ville.Nom</h4>
                </div>
            </div>
        }
    </div>
}

@code {
    private Ville[]? villes;
    private Ville? villeDepart;

    protected override void OnInitialized()
    {
        villes = VilleService.ChargerVilles();
        villeDepart = villes[0];
    }

    void ChangerVilleDepart(ChangeEventArgs evenement)
    {
        villeDepart = villes.First(ville => ville.Nom.Equals(evenement.Value));
    }
}
